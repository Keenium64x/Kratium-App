/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as StatePlanningRouteImport } from './routes/StatePlanning'
import { Route as GanttRouteImport } from './routes/Gantt'
import { Route as FileManagerRouteImport } from './routes/FileManager'
import { Route as FileEditorRouteImport } from './routes/FileEditor'
import { Route as IndexRouteImport } from './routes/index'

const StatePlanningRoute = StatePlanningRouteImport.update({
  id: '/StatePlanning',
  path: '/StatePlanning',
  getParentRoute: () => rootRouteImport,
} as any)
const GanttRoute = GanttRouteImport.update({
  id: '/Gantt',
  path: '/Gantt',
  getParentRoute: () => rootRouteImport,
} as any)
const FileManagerRoute = FileManagerRouteImport.update({
  id: '/FileManager',
  path: '/FileManager',
  getParentRoute: () => rootRouteImport,
} as any)
const FileEditorRoute = FileEditorRouteImport.update({
  id: '/FileEditor',
  path: '/FileEditor',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/FileEditor': typeof FileEditorRoute
  '/FileManager': typeof FileManagerRoute
  '/Gantt': typeof GanttRoute
  '/StatePlanning': typeof StatePlanningRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/FileEditor': typeof FileEditorRoute
  '/FileManager': typeof FileManagerRoute
  '/Gantt': typeof GanttRoute
  '/StatePlanning': typeof StatePlanningRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/FileEditor': typeof FileEditorRoute
  '/FileManager': typeof FileManagerRoute
  '/Gantt': typeof GanttRoute
  '/StatePlanning': typeof StatePlanningRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/FileEditor' | '/FileManager' | '/Gantt' | '/StatePlanning'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/FileEditor' | '/FileManager' | '/Gantt' | '/StatePlanning'
  id:
    | '__root__'
    | '/'
    | '/FileEditor'
    | '/FileManager'
    | '/Gantt'
    | '/StatePlanning'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  FileEditorRoute: typeof FileEditorRoute
  FileManagerRoute: typeof FileManagerRoute
  GanttRoute: typeof GanttRoute
  StatePlanningRoute: typeof StatePlanningRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/StatePlanning': {
      id: '/StatePlanning'
      path: '/StatePlanning'
      fullPath: '/StatePlanning'
      preLoaderRoute: typeof StatePlanningRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/Gantt': {
      id: '/Gantt'
      path: '/Gantt'
      fullPath: '/Gantt'
      preLoaderRoute: typeof GanttRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/FileManager': {
      id: '/FileManager'
      path: '/FileManager'
      fullPath: '/FileManager'
      preLoaderRoute: typeof FileManagerRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/FileEditor': {
      id: '/FileEditor'
      path: '/FileEditor'
      fullPath: '/FileEditor'
      preLoaderRoute: typeof FileEditorRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  FileEditorRoute: FileEditorRoute,
  FileManagerRoute: FileManagerRoute,
  GanttRoute: GanttRoute,
  StatePlanningRoute: StatePlanningRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
